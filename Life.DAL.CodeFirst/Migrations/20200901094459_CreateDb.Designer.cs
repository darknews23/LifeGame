// <auto-generated />
using System;
using Life.DAL.CodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Life.DAL.CodeFirst.Migrations
{
    [DbContext(typeof(LifeGameContext))]
    [Migration("20200901094459_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Actions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.AreaTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("AreaTypes");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Directions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<bool?>("BecameAdult")
                        .HasColumnType("bit");

                    b.Property<int?>("DirectionId")
                        .HasColumnType("int");

                    b.Property<int?>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("GameObjectId1")
                        .HasColumnName("GameObjectID1")
                        .HasColumnType("int");

                    b.Property<int?>("GameObjectId2")
                        .HasColumnName("GameObjectID2")
                        .HasColumnType("int");

                    b.Property<int?>("HpChange")
                        .HasColumnType("int");

                    b.Property<int?>("MoveTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("GameObjectId1");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActionId")
                        .HasColumnType("int");

                    b.Property<int>("Habitat")
                        .HasColumnType("int");

                    b.Property<bool?>("IsEverGrowing")
                        .HasColumnType("bit");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("Habitat");

                    b.HasIndex("TypeId");

                    b.ToTable("GameObjects");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjectsMoveTypes", b =>
                {
                    b.Property<int>("GameObjectId")
                        .HasColumnType("int");

                    b.Property<int>("MoveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("GameObjectId", "MoveTypeId");

                    b.HasIndex("MoveTypeId");

                    b.ToTable("GameObjectsMoveTypes");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjectsSessionState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdultAge")
                        .HasColumnType("int");

                    b.Property<int?>("BirthTime")
                        .HasColumnType("int");

                    b.Property<int>("InitialHp")
                        .HasColumnType("int");

                    b.Property<bool?>("IsFullyEatable")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxBirth")
                        .HasColumnType("int");

                    b.Property<int?>("ReceivedDamage")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("TypeId");

                    b.ToTable("GameObjectsSessionState");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjectsStepState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CurrentAge")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentPregnancyTime")
                        .HasColumnType("int");

                    b.Property<int?>("GenderTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPregnant")
                        .HasColumnType("bit");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenderTypeId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StepId");

                    b.HasIndex("TypeId");

                    b.ToTable("GameObjectsStepState");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjectsTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("GameObjectsTypes");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameTiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaTypeId");

                    b.HasIndex("StepId");

                    b.ToTable("GameTiles");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GenderTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("GenderTypes");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.MoveTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MoveTypes");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Sessions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Statuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Steps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Events", b =>
                {
                    b.HasOne("Life.DAL.CodeFirst.Models.Actions", "Action")
                        .WithMany("Events")
                        .HasForeignKey("ActionId")
                        .HasConstraintName("FK_Events_Actions")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.GameObjectsStepState", "GameObjectId1Navigation")
                        .WithMany("Events")
                        .HasForeignKey("GameObjectId1")
                        .HasConstraintName("FK_Events_GameObjectsStepState")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.MoveTypes", "IdNavigation")
                        .WithOne("Events")
                        .HasForeignKey("Life.DAL.CodeFirst.Models.Events", "Id")
                        .HasConstraintName("FK_Events_MoveTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjects", b =>
                {
                    b.HasOne("Life.DAL.CodeFirst.Models.Actions", "Action")
                        .WithMany("GameObjects")
                        .HasForeignKey("ActionId")
                        .HasConstraintName("FK_GameObjects_Actions");

                    b.HasOne("Life.DAL.CodeFirst.Models.AreaTypes", "HabitatNavigation")
                        .WithMany("GameObjects")
                        .HasForeignKey("Habitat")
                        .HasConstraintName("FK_GameObjects_AreaTypes")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.GameObjectsTypes", "Type")
                        .WithMany("GameObjects")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_GameObjects_GameObjectsTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjectsMoveTypes", b =>
                {
                    b.HasOne("Life.DAL.CodeFirst.Models.GameObjects", "GameObject")
                        .WithMany("GameObjectsMoveTypes")
                        .HasForeignKey("GameObjectId")
                        .HasConstraintName("FK_GameObjectsMoveTypes_GameObjects")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.MoveTypes", "MoveType")
                        .WithMany("GameObjectsMoveTypes")
                        .HasForeignKey("MoveTypeId")
                        .HasConstraintName("FK_GameObjectsMoveTypes_MoveTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjectsSessionState", b =>
                {
                    b.HasOne("Life.DAL.CodeFirst.Models.Sessions", "Session")
                        .WithMany("GameObjectsSessionState")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK_GameObjectsSessionState_Sessions")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.GameObjectsTypes", "Type")
                        .WithMany("GameObjectsSessionState")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_GameObjectsSessionState_GameObjectsTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameObjectsStepState", b =>
                {
                    b.HasOne("Life.DAL.CodeFirst.Models.GenderTypes", "GenderType")
                        .WithMany("GameObjectsStepState")
                        .HasForeignKey("GenderTypeId")
                        .HasConstraintName("FK_GameObjectsStepState_GenderTypes");

                    b.HasOne("Life.DAL.CodeFirst.Models.Statuses", "Status")
                        .WithMany("GameObjectsStepState")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_GameObjectsStepState_Statuses")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.Steps", "Step")
                        .WithMany("GameObjectsStepState")
                        .HasForeignKey("StepId")
                        .HasConstraintName("FK_GameObjectsStepState_Steps")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.GameObjectsTypes", "Type")
                        .WithMany("GameObjectsStepState")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_GameObjectsStepState_GameObjectsTypes")
                        .IsRequired();
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.GameTiles", b =>
                {
                    b.HasOne("Life.DAL.CodeFirst.Models.AreaTypes", "AreaType")
                        .WithMany("GameTiles")
                        .HasForeignKey("AreaTypeId")
                        .HasConstraintName("FK_GameTiles_AreaTypes")
                        .IsRequired();

                    b.HasOne("Life.DAL.CodeFirst.Models.Steps", "Step")
                        .WithMany("GameTiles")
                        .HasForeignKey("StepId")
                        .HasConstraintName("FK_GameTiles_Steps")
                        .IsRequired();
                });

            modelBuilder.Entity("Life.DAL.CodeFirst.Models.Steps", b =>
                {
                    b.HasOne("Life.DAL.CodeFirst.Models.Sessions", "Session")
                        .WithMany("Steps")
                        .HasForeignKey("SessionId")
                        .HasConstraintName("FK_Steps_Sessions")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
